{
    "title": "Jira",
    "description": "Connector for handling Jira issues",
    "credentials": {
        "fields": {
            "baseUrl": {
                "label": "Base URL for your Jira instance:",
                "viewClass": "TextFieldView",
                "required": true
            },
            "username": {
                "label": "Username:",
                "viewClass": "TextFieldView",
                "required": true
            },
            "password": {
                "label": "Password:",
                "viewClass": "TextFieldView",
                "required": true
            }
        }
    },
    "triggers": {
        "getNewIssues": {
            "main": "./lib/triggers/getNewIssues.js",
            "type": "polling",
            "title": "Get New Issues",
            "fields": {
                "startDateTime": {
                    "label": "Issues created since:",
                    "required": true,
                    "viewClass": "TextFieldWithNoteView",
                    "placeholder": "yyyy-mm-dd hh:mm",
                    "note": "Please use <code><b>yyyy-mm-dd hh:mm</b></code> format and use the same timezone as the one configured in JIRA."
                },
                "projects": {
                    "label": "Project codes:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate project codes with a single comma. Do not enclose in quotes."
                },
                "labels": {
                    "label": "Retrieve issues having at least one of these labels:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate labels with a single comma. Do not enclose in quotes."
                },
                "exclLabels": {
                    "label": "Exclude issues having one of these labels:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate labels with a single comma. Do not enclose in quotes."
                },
                "statuses": {
                    "label": "Status names:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate status names with a single comma. Do not enclose in quotes."
                },
                "includeComments": {
                    "label": "Include comments:",
                    "viewClass": "CheckBoxView"
                },
                "maxResults": {
                    "label": "Maximum number of issues to retrieve:",
                    "viewClass": "TextFieldWithNoteView",
                    "default": "50",
                    "note": "Default is 50. If there are more new issues than this, they will be retrieved the next time the trigger is run."
                }
            },
            "metadata": {
                "out": "./lib/schemas/issue.out.json"
            }
        },
        "getUpdatedIssues": {
            "main": "./lib/triggers/getUpdatedIssues.js",
            "type": "polling",
            "title": "Get Updated Issues",
            "fields": {
                "startDateTime": {
                    "label": "Issues updated since:",
                    "required": true,
                    "viewClass": "TextFieldWithNoteView",
                    "placeholder": "yyyy-mm-dd hh:mm",
                    "note": "Please use <code><b>yyyy-mm-dd hh:mm</b></code> format and use the same timezone as the one configured in JIRA."
                },
                "projects": {
                    "label": "Project codes:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate project codes with a single comma. Do not enclose in quotes."
                },
                "labels": {
                    "label": "Retrieve updated issues having at least one of these labels:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate project codes with a single comma. Do not enclose in quotes."
                },
                "exclLabels": {
                    "label": "Exclude updated issues having one of these labels:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate project codes with a single comma. Do not enclose in quotes."
                },
                "statuses": {
                    "label": "Current status(es):",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate status names with a single comma. Do not enclose in quotes."
                },
                "statusChangedTo": {
                    "label": "Status changed to:",
                    "viewClass": "TextFieldView"
                },
                "includeComments": {
                    "label": "Include comments:",
                    "viewClass": "CheckBoxView"
                },
                "hasNewComments": {
                    "label": "With new comments:",
                    "viewClass": "CheckBoxView"
                },
                "hasCommentsForRole": {
                    "label": "With comments for role:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Issues containing comments restricted to the specified role."
                },
                "hasCommentsWithVisibility": {
                    "label": "With comments with visibility:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Issues containing comments with the specified visibility."
                },
                "maxResults": {
                    "label": "Maximum number of issues to retrieve:",
                    "viewClass": "TextFieldWithNoteView",
                    "default": "50",
                    "note": "Default is 50. If there are more new issues than this, they will be retrieved the next time the trigger is run."
                }
            },
            "metadata": {
                "out": "./lib/schemas/issue.out.json"
            }
        }
    },
    "actions": {
        "createIssue": {
            "main": "./lib/actions/createIssue.js",
            "title": "Create Issue",
            "metadata": {
                "in": "./lib/schemas/createIssue.in.json",
                "out": "./lib/schemas/createIssue.out.json"
            }
        },
        "updateIssue": {
            "main": "./lib/actions/updateIssue.js",
            "title": "Update Issue",
            "metadata": {
                "in": "./lib/schemas/updateIssue.in.json",
                "out": "./lib/schemas/updateIssue.out.json"
            }
        },
        "doTransition": {
            "main": "./lib/actions/doTransition.js",
            "title": "Update Status",
            "metadata": {
                "in": "./lib/schemas/doTransition.in.json",
                "out": "./lib/schemas/doTransition.out.json"
            }
        },
        "getIssue": {
            "main": "./lib/actions/getIssue.js",
            "title": "Get Issue",
            "metadata": {
                "in": "./lib/schemas/getIssue.in.json",
                "out": "./lib/schemas/issue.out.json"
            }
        },
        "addComment": {
            "main": "./lib/actions/addComment.js",
            "title": "Add Comment",
            "metadata": {
                "in": "./lib/schemas/addComment.in.json",
                "out": "./lib/schemas/addComment.out.json"
            }
        },
        "getComments": {
            "main": "./lib/actions/getComments.js",
            "title": "Get Comments",
            "fields": {
                "excludedAuthors": {
                    "label": "Excluded authors (usernames):",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Specify one or multiple usernames (comma separated) for which you don't want comments to be returned."
                },
                "visibility": {
                    "label": "Visibility:",
                    "viewClass": "SelectView",
                    "model": {
                        "internal": "Internal",
                        "external": "External"
                    }
                },
                "roles": {
                    "label": "Roles:",
                    "viewClass": "TextFieldWithNoteView",
                    "note": "Separate role names with a single comma. Do not enclose in quotes."
                }
            },
            "metadata": {
                "in": "./lib/schemas/getComments.in.json",
                "out": {}
            }
        },
        "addAttachment": {
            "main": "./lib/actions/addAttachment.js",
            "title": "Add Attachment",
            "metadata": {
                "in": "./lib/schemas/addAttachment.in.json",
                "out": {}
            }
        }
    }
}
